@using PMI_Site.Application.Features.Sites.Queries.GetCountrySite
@{
    ViewData["Title"] = "Home";
}
@model List<GetCountrySiteResponse>

<section>
    <div class="container">
        <h3 class="main-article-title header-line-xl">
            T&amp;PE PMI Sites Knowledge Database
        </h3>
        <p class="main-article">
            This site aims to store brief information about the Infrastructure of PMI affiliates and sites. Do you
            want to discover? Let's start here!
        </p>
    </div>
</section>

<section>
    <div class="container">
        <h5 class="map-title header-line">Click On The Countries To See Affiliates And Sites!</h5>
        <div class="form-group has-search mt-4" style="max-width:300px ;">
            <i class="bi bi-search form-control-feedback"></i>
            <input type="text" class="form-control" placeholder="Search">
            <ul class="list-unstyled country-list" style="width: 300px;">
                <li class="search-list-style" data-country="35">
                    <i class="bi bi-map-fill"></i>
                    <span class="region fw-bold"> EEMA</span>
                    <span class="fw-bold">-</span>
                    <span class="country"> Turkey</span>
                </li>
            </ul>
        </div>
        <div id="svgMap"></div>
    </div>
</section>

<div id="siteListContainer">
    @await Component.InvokeAsync("Sites", new { CountryISO = "TR" });
</div>


<section>
    <div class="container">
        <div class="quick-links">
            <h2 class="header-line-sm">Quick Links</h2>
            <button type="button">FAQS</button>
            <button type="button">NEWS</button>
        </div>
    </div>
</section>

@section Styles {
   <style>
    body{
            background-color: #1b1929;
            background-image: none;
            background-attachment: unset;
            background-repeat: unset;
            background-size: unset;
    }
   </style>
}

@section Scripts {
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/js/svg-zoom.js"></script>
    <script src="~/js/map.js"></script>
    <script>
        const CountrySiteValues = {};
        let myList = @Json.Serialize(Model);

        myList.forEach(item => {
            CountrySiteValues[item.countryISO] = { "totalSites": parseInt(item.siteCount, 10) };
        });

        const worldMap = new svgMap({
            targetElementID: 'svgMap',
            data: {
                data: {
                    totalSites: {
                        name: 'number of sites:',
                        format: '{0}'
                    }
                },
                applyData: 'totalSites',
                values: CountrySiteValues,
            },
            initialZoom: 1,
            noDataText: "site not found",
            zoomScaleSensitivity: 0.4,
            mouseWheelZoomWithKey: true,
            mouseWheelZoomEnabled: false,
            onGetTooltip: function (tooltipDiv, countryID, countryValues) {
                var countries = worldMap.countries;
                var tooltipContentElement = document.createElement('div');
                tooltipContentElement.style.padding = '16px 24px';

                var innerHTML =
                    '<div style="margin: 0 0 10px; text-align: center"><img src="../images/country-svg/{0}.svg" alt="" style="height: 40px; width: auto; border: 2px solid #eee"></div>'.replace(
                        '{0}',
                        countryID.toLowerCase()
                    );

                innerHTML +=
                    '<div style="min-width: 180px; font-weight: bold; margin: 0 0 15px; text-align: center">' +
                    countries[countryID] +
                    '</div>';

                if (countryValues && countryValues.totalSites > 0) {
                    innerHTML +=
                        '<div style="margin-bottom: 8px"><span style="color: #6d0; display: block; margin-right: 20px; width: 20px; text-align: center"></span>number of sites:' + countryValues.totalSites + '</div>';
                } else {
                    innerHTML +=
                        '<div style="margin-bottom: 8px; color: #aaa"><span style="color: #f03; display: inline-block; margin-right: 20px; width: 20px; text-align: center"></span>sites not found</div>';
                }

                tooltipContentElement.innerHTML = innerHTML;
                return tooltipContentElement;
            }
        });

        const resizeHandler = () => {
            worldMap.mapPanZoom.resize();
            worldMap.mapPanZoom.fit();
            worldMap.mapPanZoom.center();
        }
        window.addEventListener("resize", resizeHandler);

        $(document).ready(function () {
            var ul = $('.country-list');
            var input = $('.form-control');

            function adjustInputBorderRadius() {
                if (ul.children().length > 0) {
                    input.css({
                        'border-bottom-left-radius': '0',
                        'border-bottom-right-radius': '0'
                    });
                } else {
                    input.css({
                        'border-bottom-left-radius': '',
                        'border-bottom-right-radius': ''
                    });
                }
            }

            adjustInputBorderRadius();

            input.on('input', adjustInputBorderRadius);
        });

        const allCountry = document.querySelectorAll('.svgMap-country');

        allCountry.forEach(country => {
            country.addEventListener("click", (e) => {
                $.ajax({
                    url: '@Url.Action("SiteList", "Home")',
                    type: 'GET',
                    data: { CountryISO: e.target.dataset.id },
                    success: function (result) {
                        $("#siteListContainer").html(result);
                        window.location.href = "#siteListContainer";

                    },
                    error: function (xhr, status, error) {
                        console.log(xhr.responseText);
                    }
                });
            });
        });

        $(() => {
            $('#sitesTable tbody tr').click(function () {
                let siteId = $(this).attr('data-Id');
                window.location.href = '/site/index/' + siteId;
            });
        });

    </script>
}
